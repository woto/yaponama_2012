При добавлении автомобиля мы должны показывать только фирмы, выпускающие автомобили.
При добавлении товара должны показывать все фирмы.

==================

Если клиент с Москвы, то процедура оформл. заказа должна быть легче. (не требуется фамилия и т.д.)
Если товар с наличия, то не требуется предоплата.

==================

SIP

http://qoffeesip.quobis.com/
http://sipjs.com/
http://jssip.net/


==================

В Opera невозможно отметить чекбоксы в модальном окне выбора отображаемых колонок, а так же там недоделка с label for, из-за которой в Chrome невозможно выбрать чекбокс по лейбелу

==================

Парсеры и конверторы
  Unoconv
  OpenpyXL
  xlrd - начал поддерживать xlsx
  www.python-excel.org
  https://github.com/onyxfish/csvkit
  https://github.com/python-excel/xlwt
  https://github.com/python-excel/xlutils
  https://github.com/python-excel/tutorial/tree/master/tests

Есть такая прблема, что в fixtures brands названия производителей могут быть только большими буквами. Иначе возникает проблема с валидацией на уникальность

==================

Похоже как-то неправильно навешиваю обработчик, в результате появляется такой баг.
Загрузить страницу доставки, развернуть вариант доставки - все нормально.
Если многократно ходить по страницам (например щелкать на ссылке доставки), а потом развернуть вариант доставки, то viewport пытается проскроллить до этого элемента и не дает скролиться по команде пользователя.

==================

Сделать кнопку remove в списке аватарок загруженных файлов рабочей

==================

Каким-нибудь образом разрешить ситуацию с закачанными файлами:
  1. либо разрешить таг span в ckeditor - simple
  2. либо по-другому вставлять закаченные файлы в ckeditor - simple (чатик)

==================

Не забыть, что текущая версия mail (2.5.4) работает не всегда корректно с темой письма. В Версии 2.6 ошибку исправили, но rails пока жестко зацеплен на версии до 2.6. Со временем пересмотреть.

==================

Добавил div is_search и javascript по отправке stat отправляю ключ, потом либо пересмотреть, либо добавить тест на это дело

==================

Пересмотреть нужен ли cached_talk в Somebody

==================

В чате доделать.
Бота, который будет принимать различные решения
Например если пользователь отправил менеджеру персональное сообщение, но менеджер не ответил, то это сообщение разослать всем менеджерам (в реалтайме)
Если отправлено менеджеру, в онлайне, но менеджер не получил и других нет, то делать show() формы для ввода email/телефона


==================

Я уже отключил jquery ui, позже убрать окончательно строки из application.js и application.css.scss, а так же удалить из gem'ов и submodules(?)

==================

Написать тест для проверки 4 версий кешировнных и атрибутов
TODO вернуть jquery-ui (widget необходим для работы file-upload)
Задействовать или переделать password_reset_sent_at и все такое
Переименовать russian_time_zone_auto_id в auto_offset. А так же доработать немного функционал. Целые числа (теперь не целые). Отрицательные/положительные смещения времени. Округление.
Необходимо задействовать active_record.default_timezone ? получая время из базы через node.js
Убрал creation_reason из postal_address. В логах можно найти объяснение. На самом деле например флаг. Доставка по данному адресу уже осуществлялась гораздо полезнее II8A
Проработать ключ :required => true для элементов формы
Предполагаемая стоимость доставки

==================

Есть проблема с правильностью отображения #loading
  1. хотелось бы чтобы на мобильных устройствах отображалось с правильным размером
  2. позиционирование как минимум на не мобильном браузере

Проработать 
  - content_for :form_error do
    = f.error_notification

= f.alert_danger do
  = f.error(:base)
/= f.error_notification :message => f.error(:base)

==================

TODO Создать тестовый проект, там посмотреть код error_notification, если получится, сделать так, чтобы если форма содержит ошибку
то выкидывала вверх. Наверно будет удобно через опцию формы, а если нет. Особое внимание fields_for, чтобы ошибки вложенных форм
так же обрабатывались.

  div class="page-header"
    h2=t '.title', :default => [:'helpers.titles.new', 'Список %{model}'], :model => model_class.model_name.human


    h1 =t '.title', :default => model_class.model_name.human.pluralize

==================

  <%= f.input :name %>
  <%= f.input :notes, :input_html => {:rows => 3} %>
  <%= f.input :available %>
  <%= f.input :sequence %>
  <%= f.input :full_prepayment_required %>
  <%= f.input :name_required %>
  <%= f.input :phone_required %>
  <%= f.input :metro_required %>
  <%= f.input :shop_required %>
  <%= f.input :postal_address_required %>
  <%= f.input :delivery_cost_required %>
  <%= f.input :image %>
  <%= f.input :notes_invisible, :input_html => {:rows => 3}  %>
  company_required


    # TODO
    #[:mails].each do |table|
    #  add_column table, :available, :boolean, :default => true
    #  add_column table, :sequence, :integer
    #  add_column table, :name, :string
    #  add_column table, :delivery_cost, :decimal, :default => 0, :precision => 8, :scale => 2
    #  add_column table, :delivery_id, :integer
    #  add_column table, :content, :text
    #  add_column table, :postal_address_required, :boolean, :default => false
    #  add_column table, :full_prepayment_required, :boolean, :default => false
    #  add_column table, :passport_required, :boolean, :default => false
    #  add_column table, :track_number_required, :boolean, :default => false
    #  #add_column table, :prepayment_for_delivery_required, :boolean, :default => false


    #  add_index table, :delivery_id, name: "index_#{table}_on_delivery_id"
    #end

===================

product_fields



/ TODO вынести в shared, т.к. используется и в user и в edit контроллерах

------------

#root_products-tab.tab-pane.active
  #root_products
    
    = f.simple_fields_for :root_products do |product| 
      = render 'product_fields', :f => product, :stack => 0
    .links
      = link_to_add_association 'Добавить товар', f, :root_products, :class => "btn btn-success ignoredirty", :render_options => {:locals => {:stack => 0}}, :partial => 'product_fields' 

=============

Удалить все .form-actions

=============

/td
  = link_to smart_route({:prefix => [:edit], :postfix => [item]}, :id => item.id, :user_id => item.user_id), data: { toggle: "tooltip" }, title: "#{ t('.edit', :default => t("helpers.links.edit")) }", :class => 'btn btn-warning', :rel => "tooltip" do
    i.icon-edit

/td
  = link_to smart_route({:postfix => [item]}, :id => item.id, :user_id => item.user_id), :method => :delete, data: { toggle: "tooltip" }, title: "#{ t('.destroy', :default => t("helpers.links.destroy")) }", :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :rel => "tooltip", :class => 'btn btn btn-danger' do
    i.icon-trash

/td
  = link_to smart_route({:prefix => [:transactions], :postfix => [item]}, :id => item.id, :user_id => item.user_id), data: { toggle: "tooltip" }, title: "#{ t('.transactions', :default => t("helpers.links.transactions")) }", :class => 'btn', :rel => "tooltip" do
    i.icon-time

=============

<li> 
  <%= link_to t('.destroy', :default => t("helpers.links.destroy")), smart_route({:postfix => [:products, :multiple_destroy_index]}, :user_id => params[:user_id], :order_id => params[:order_id], :primary_key => params[:primary_key], :return_path => request.fullpath, :status => params[:status]), :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }  %>
</li>


=============

Вырезал из application.html.slim

/= javascript_include_tag "/assets/JsSIP/dist/jssip-0.3.4.js"

...

  /coffee:
    $ ->
      configuration =
        ws_servers: "ws://192.168.2.5:8088/ws"
        uri: "sip:1060@doubango.org"
        password: "1060"
        stun_servers: 'stun:74.125.132.127:19302'
        register: true
        trace_sip: true

      coolPhone = new JsSIP.UA(configuration)
      coolPhone.start()

      # Make an audio/video call:

      # Register callbacks to desired call events
      eventHandlers =
        progress: (e) ->
          console.log "call is in progress"

        failed: (e) ->
          console.log "call failed with cause: " + e.data.cause

        ended: (e) ->
          console.log "call ended with cause: " + e.data.cause

        started: (e) ->
          rtcSession = e.sender
          console.log "call started"
          
      options =
        eventHandlers: eventHandlers
        mediaConstraints:
          audio: true
          video: false

      # coolPhone.call "1061", options


==================================================================

validates :sms_notify_method, :inclusion => { :in => Rails.configuration.sms_notify_methods }
validates :robokassa_integration_mode, :inclusion => { :in => Rails.configuration.robokassa_integration_modes }
validates :default_somebody_order_rule, :inclusion => { :in => Rails.configuration.somebody_order_rules }
validates :environment, :presence => true
validates :emex_income_rate, :numericality => true
validates :avtorif_income_rate, :numericality => true
validates :retail_rate, :numericality => true
validates :price_request_cache_with_replacements_in_seconds, :numericality => { :only_integer => true }
validates :price_request_cache_without_replacements_in_seconds, :numericality => { :only_integer => true }
validates :robokassa_pass_1, :presence => true
validates :robokassa_pass_2, :presence => true
validates :robokassa_user, :presence => true
validates :default_somebody_prepayment, :numericality => true
validates :default_somebody_discount, :numericality => true
validates :avisosms_username, :presence => true
validates :avisosms_password, :presence => true
validates :avisosms_source_address, :presence => true
validates :avisosms_delivery_report, :presence => true
validates :avisosms_flash_message, :presence => true
validates :avisosms_validity_period, :presence => true
validates :site_address, :presence => true
validates :site_port, :presence => true
validates :redis_address, :presence => true
validates :redis_port, :presence => true
validates :realtime_address, :presence => true
validates :realtime_port, :presence => true
validates :price_address, :presence => true
validates :price_port, :presence => true
validates :juggernaut_address, :presence => true
validates :juggernaut_port, :presence => true

==================================================================

http://sms.ru/?panel=mass&subpanel=lists

https://github.com/BrandyMint/littlesms
http://littlesms.ru/

https://github.com/Antiarchitect/smsc
http://smsc.ru/

http://www.infobip.com.ru/
https://github.com/infobip/oneapi-ruby

http://mainsms.ru/
https://github.com/evserykh/mainsms_api

http://sms24x7.ru/
https://github.com/newmen/sms24x7

==================================================================

to_cached_spare_info и from_cached_spare_info объединить (они практически идентичные)
from_spare_info_attributes и to_spare_info_attributes


  test 'Запрашивая /MC нас должно редиректнуть на mitsubishi' do
    skip
  end

  test 'Запрашиваия /brands/411445140-ms/parts нас должно редиректнуть на mitsubishi' do
    skip
  end

Что происходит с описаниями/заменами производителя, которому назначили родителя?
