- model_class = User

ul#myTab.nav.nav-tabs
  - Rails.configuration.user_roles.each do |k, v|

    - css_class = ""

    - if params[:role].blank?
      - if k == 'all'
        - css_class = "active"
    - elsif params[:role] == k
      - css_class = "active"

    li class="#{css_class}"
      = link_to v['title_plural'], admin_users_path(:role => k)
 

#toolbar
  #toolbar-affix data-spy="affix" data-offset-top="60"
    #toolbar-affix-inner.clearfix
      .pull-left
        .margin-on-left
          .btn-group.right-space
            = render :partial => "shared/check_uncheck"

          div.btn-group
            a.btn.btn-primary.dropdown-toggle data-toggle="dropdown" href="#"
              ' Действия
              span.caret
            ul class="dropdown-menu"
              li = link_to t('.new', :default => t("helpers.links.new")), edit_admin_user_path('new')
              li = link_to 'Объединить', '#'
              li : a time_zone
              li : a notes_invisible
              li : a names
              li : a email_addresses
              li : a phones
              li : a postal_addresses
              li : a debit
              li : a credit
              li : a prepayment
              li : a city
              li : a country
              li : a region
              li : a district
              li : a lat
              li : a lng
              li : a remote_ip
              li : a accept_language
              li : a user_agent
              li : a datetime
              li : a location
              li : a title
              li : a show

          |  
          button.btn.btn-primary type="button" data-toggle="button" Онлайн
      .pull-right
        .margin-on-right
          = paginate @users, :theme => :toolbar

.tab-content
  .tab-pane.active
    table.table.table-striped
      thead
        tr
          th = model_class.human_attribute_name(:id)
          th = model_class.human_attribute_name(:notes_invisible)
          th = model_class.human_attribute_name(:name)
          th = model_class.human_attribute_name(:email_address)
          th = model_class.human_attribute_name(:phone)
          th = model_class.human_attribute_name(:debit)
          th = model_class.human_attribute_name(:credit)
          th = model_class.human_attribute_name(:prepayment)
          th = model_class.human_attribute_name(:phone)
          th = model_class.human_attribute_name(:ipgeobase_name)
          th = model_class.human_attribute_name(:ipgeobase_names_depth_cache)
          th = model_class.human_attribute_name(:remote_ip)
          th = model_class.human_attribute_name(:language)
          th = model_class.human_attribute_name(:user_agent)
          th = model_class.human_attribute_name(:russian_time_zone_auto_id)
          th = t '.actions', :default => t("helpers.actions")

      tbody
        - @users.each do |user|
          tr
            td 
              = link_to user.id, admin_user_path(user)
              = hidden_field_tag "user_ids[#{user.id}]", "0"
              center = check_box_tag "user_ids[#{user.id}]", "1", (session[:users] ? session[:users][user.id.to_s] == '1' : false), :class => 'item'
            td = user.notes_invisible
            td = link_to(user.names.collect(&:name).join(', '), edit_admin_user_path(user, :tab => :names))
            td = link_to(user.email_addresses.collect(&:email_address).join(', '), edit_admin_user_path(user, :tab => :email_addresses))
            td = link_to(user.phones.collect{|phone| phone.to_label}.join(', '), edit_admin_user_path(user, :tab => :phones))
            td = user.account.debit 
            td = user.account.credit 
            td = user.prepayment
            td = user.phones.first.try(:phone)
            td = user.ipgeobase_name
            td = user.ipgeobase_names_depth_cache
            td = user.remote_ip
            td = user.accept_language
            td = user.user_agent
            td = Rails.configuration.russian_time_zones[user.russian_time_zone_auto_id.to_s]
            td = link_to 'Show', admin_stat_path(user.stats)



            td
              .btn-group
                button.btn.btn-primary.dropdown-toggle data-toggle="dropdown"
                  | Дейсвтия 
                  span.caret
                ul.dropdown-menu.pull-right
                  li.dropdown-submenu.pull-left
                    = link_to("Товары", admin_user_products_path(user))
                    ul.dropdown-menu
                      - Rails.configuration.products_status.each do |k, v|
                        li 
                          = link_to admin_user_products_path(user, :status => k) do
                            =' v["title"]
                            - if v['badge'].present?
                              span class="badge badge-#{k}" = v['badge']
                  li.dropdown-submenu.pull-left
                    = link_to("Заказы", admin_user_orders_path(user))
                    ul.dropdown-menu
                      - Rails.configuration.orders_status.each do |k, v|
                        = content_tag(:li, link_to(v["title"], admin_user_orders_path(user, :status => k)))
                  li.dropdown-submenu.pull-left
                    = link_to t('.edit', :default => t("helpers.links.edit")), edit_admin_user_path(user)
                    ul.dropdown-menu
                      li = link_to("Главная", edit_admin_user_path(user, :tab => :users))
                      li.divider
                      li = link_to("Авто", edit_admin_user_path(user, :tab => :cars))
                      li.divider
                      li = link_to("Товары", edit_admin_user_path(user, :tab => :root_products))
                      li = link_to("Заказы", edit_admin_user_path(user, :tab => :orders))
                  li = link_to t('.destroy', :default => t("helpers.links.destroy")), admin_user_path(user), :method => :delete, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }
